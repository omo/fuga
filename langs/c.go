package langs

import (
	base "github.com/omo/fuga/base"
)

type CGenerator struct{}

var cTemplate = TemplateMap{
	"foo.c": `/* Generated by fuga */
#include <stdio.h>

int main(int argc, char* argv[]) {
  printf("Hello, World!\n");
  return 0;
}
`,

	"Makefile": `#
CC=gcc
TARGET=./foo
SOURCE=./foo.c

run : ${TARGET}
	${TARGET}

clean :
	-rm ${TARGET}

${TARGET} : ${SOURCE}
	${CC} $^ -o $@

.PHONY : run clean
`,
	".gitignore": `
foo
*.o
*.obj
*.exe
`}

func (*CGenerator) Generate(writer base.ScratchWriter) error {
	cTemplate.WriteTo(writer, "foo.c")
	cTemplate.WriteTo(writer, "Makefile")
	cTemplate.WriteTo(writer, ".gitignore")
	return nil
}

type CLanguage struct{}

func (*CLanguage) MakeGenerator() base.StubGenerator {
	return &CGenerator{}
}

func (*CLanguage) MakeRunner() base.ScratchRunner {
	return &MakefileRunner{}
}

func init() {
	base.AddLanguage("c", &CLanguage{})
}
